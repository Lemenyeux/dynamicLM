% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_interactions.R
\name{add_interactions}
\alias{add_interactions}
\title{Add landmarking time interactions to a super dataset}
\usage{
add_interactions(
  lmdata,
  LMcovars,
  func_covars,
  func_LMs,
  LM_col = "LM",
  keep = T
)
}
\arguments{
\item{lmdata}{An object of class "LMdataframe".

This can be created by running \code{\link[=stack_data]{stack_data()}}, or creating a
stacked data set and storing it in a list with attributes outcome, w and
end_time (see \code{\link[=stack_data]{stack_data()}} for further description of outcome
and w), end_time is the largest landmarking time.}

\item{LMcovars}{Vector of strings indicating the columns that are to have a
LM interaction}

\item{func_covars}{A list of functions to use for interactions between LMs
and covariates.}

\item{func_LMs}{A list of functions to use for transformations of the
landmark times.}

\item{LM_col}{Character string specifying the column name that indicates the
landmark time point for a row.}

\item{keep}{Boolean value to indicate whether or not to keep the columns
given by LMcovars without the time interactions or not. Default=FALSE.}
}
\value{
An object of class "LMdataframe" which now also contains LM
time-interactions.
The object has the following components:
\itemize{
\item w, outcome: as the input (obtained from lmdata)
\item func_covars: as the input
\item func_LMs: as the input
\item LMcovars: as the input
\item allLMcovars: a list of the new columns added
\item LM_col: as the input
}
}
\description{
Add landmarking time interactions to a super dataset
}
\details{
For each variable "var" in \code{LMcovars}, new columns var_1,...,var_i
(length(func_covars) == i) are added; one column for each interaction given
in func_covars is added

Transformations of the LM column are added and labelled as LM_1,...,LM_j
(length(func_LMs) == j); one column for each interaction given in func_LMs
is added
}
\examples{
\dontrun{
data(relapse)
outcome = list(time="Time", status="event")
covars = list(fixed=c("ID","age.at.time.0","male","stage","bmi"),
              varying=c("treatment"))
w = 60; LMs = c(0,12,24)
# Covariate-landmark time interactions
func.covars <- list( function(t) t, function(t) t^2)
# let hazard depend on landmark time
func.lms <- list( function(t) t, function(t) t^2)
# Choose covariates that will have time interaction
pred.covars <- c("age","male","stage","bmi","treatment")
# Stack landmark datasets
lmdata <- stack_data(relapse, outcome, LMs, w, covars, format="long",
                     id="ID", rtime="T_txgiven", right=F)
# Update complex LM-varying covariates, note age is in years and LM is in months
lmdata$data$age <- lmdata$data$age.at.time.0 + lmdata$data$LM/12
# Add LM-time interactions
lmdata <- add_interactions(lmdata, pred.covars, func.covars, func.lms)
head(lmdata$data)
}

}
