% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dynamic_lm.R
\name{dynamic_lm.LMdataframe}
\alias{dynamic_lm.LMdataframe}
\title{Fit a dynamic Cox or cause-specific Cox landmark supermodel to a stacked
landmark dataset}
\usage{
\method{dynamic_lm}{LMdataframe}(
  lmdata,
  formula,
  type = "coxph",
  method = "breslow",
  cluster,
  x = FALSE,
  ...
)
}
\arguments{
\item{lmdata}{An object of class "LMdataframe", this can be created by
running \code{\link[=stack_data]{stack_data()}} and \code{\link[=add_interactions]{add_interactions()}}}

\item{formula}{The formula to be used, remember to include "+cluster(ID)" for
the column that indicates the ID of the individual for robust error
estimates.}

\item{type}{"coxph" or "CSC"/"CauseSpecificCox"}

\item{method}{A character string specifying the method for tie handling.
Default is "breslow". More information can be found in \code{\link[survival:coxph]{survival::coxph()}}.}

\item{cluster}{Variable which clusters the observations (for e.g., identifies
repeated patient IDs), for the purposes of a robust variance. If omitted,
extracted from \code{formula}.}

\item{x}{Logical value. If set to true, \code{lmdata} is stored in the returned
object. This is required for internal validation.}

\item{...}{Arguments given to coxph or CSC.}
}
\value{
An object of class "LMcoxph" or "LMCSC" with components:
\itemize{
\item model: fitted model
\item type: as input
\item w, func_covars, func_lms, lm_covs, all_covs, outcome: as in \code{lmdata}
\item LHS: the survival outcome
\item linear.predictors: the vector of linear predictors, one per subject.
Note that this vector has not been centered.
\item args: arguments used to call model fitting
\item id_col: the cluster argument, often specifies the column with patient ID
\item lm_col: column name that indicates the landmark time point for a row.
}
}
\description{
Fit a dynamic Cox or cause-specific Cox landmark supermodel to a stacked
landmark dataset
}
\examples{
\dontrun{
data(relapse)
outcome <- list(time = "Time", status = "event")
covars <- list(fixed = c("ID","age.at.time.0","male","stage","bmi"),
               varying = c("treatment"))
w <- 60; lms <- c(0, 6, 12, 18)
LMs = seq(0,36,by=6)
# Covariate-landmark time interactions
func_covars <- list(function(t) t, function(t) t^2)
# let hazard depend on landmark time
func_lms <- list(function(t) t, function(t) t^2)
# Choose covariates that will have time interaction
pred_covars <- c("age","male","stage","bmi","treatment")
# Stack landmark datasets
lmdata <- stack_data(relapse, outcome, lms, w, covars, format = "long",
                     id = "ID", rtime = "T_txgiven")
# Update complex LM-varying covariates, note age is in years and LM is in months
lmdata$data$age <- lmdata$data$age.at.time.0 + lmdata$data$LM/12
# Add LM-time interactions
lmdata <- add_interactions(lmdata, pred_covars, func_covars, func_lms)
head(lmdata$data)

formula <- "Hist(Time, event, LM) ~ age + male + stage + bmi + treatment +
           age_1 + age_2 + male_1 + male_2 + stage_1 + stage_2 + bmi_1 +
           bmi_2 + treatment_1 + treatment_2 + LM_1 + LM_2 + cluster(ID)"
supermodel <- dynamic_lm(lmdata, as.formula(formula), "CSC")
print(supermodel)

par(mfrow = c(2,3))
plot(supermodel)
}
}
